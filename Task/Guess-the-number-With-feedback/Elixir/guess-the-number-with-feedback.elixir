defmodule GuessingGame do
  def init() do
    :random.seed(:erlang.now())
  end
  def play(lower, upper) do
    play(lower, upper, :random.uniform(upper + 1 - lower) + lower - 1)
  end
  defp play(lower, upper, number) do
    guess = Integer.parse(IO.gets "Guess a number (#{lower}-#{upper}): ")
    case guess do
      {n, _} when n == number ->
        IO.puts "Well guessed!"
      {n, _} when lower <= n and n <= upper ->
        if n > number do
          IO.puts "Too high."
        else
          IO.puts "Too low."
        end
        play(lower, upper, number)
      _ ->
        IO.puts "Guess not in valid range."
        play(lower, upper, number)
    end
  end
end

GuessingGame.init()
GuessingGame.play(1, 100)
