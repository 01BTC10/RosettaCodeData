use std::vec::Vec;

fn hailstone(mut n : int) -> Vec<int>{
    let mut v = vec!(n);
    while n > 1{
        n = if n % 2 == 0    { n / 2 }
            else             { 3 * n + 1 };
        v.push(n);
    }
    return v;
}

fn main() {
    let mut max_sequence = 0i;
    let mut number_max_sequence = 0i;
    let hs27 = hailstone(27);
    println!("hailstone(27) has {} elements, starting from {} and ending to {}.", hs27.len(), hs27[0..4], hs27[hs27.len()-4..hs27.len()]);

    for i in range(1i, 100000) {
        let hs_i = hailstone(i);
        if hs_i.len() as int > max_sequence {
            max_sequence = hs_i.len() as int;
            number_max_sequence = i;
        }
    }
    println!("Maximum : {} elements with number {}.", max_sequence, number_max_sequence);
}
