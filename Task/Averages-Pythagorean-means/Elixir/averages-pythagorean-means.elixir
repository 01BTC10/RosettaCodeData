defmodule Means do
  def arithmetic(list) do
    Enum.sum(list) / Enum.count(list)
  end
  def geometric(list) do
    :math.pow(Enum.reduce(list, &(&1 * &2)), 1 / Enum.count(list))
  end
  def harmonic(list) do
    1 / arithmetic(Enum.map(list, &(1 / &1)))
  end
end

IO.puts "Arithmetic mean: #{am = Means.arithmetic(1..10)}"
IO.puts "Geometric mean:  #{gm = Means.geometric(1..10)}"
IO.puts "Harmonic mean:   #{hm = Means.harmonic(1..10)}"
IO.puts "(#{am} >= #{gm} >= #{hm}) is #{am >= gm and gm >= hm}"
