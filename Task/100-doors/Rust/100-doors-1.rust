// rust 1.0.0-alpha
#![feature(core)]
use std::iter::{range_step_inclusive};
fn main() {
  let mut door_open = [false; 100];
  for pass in (1us..101) {
    for door in range_step_inclusive(pass, 100, pass) {
      door_open[door - 1] = !door_open[door - 1];
    }
  }
  for (i, state) in door_open.iter().enumerate() {
    println!("Door {} is {}.", i + 1, if *state {"open"} else {"closed"});
  }
}
