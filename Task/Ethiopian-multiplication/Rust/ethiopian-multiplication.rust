fn double(a : int) -> int{
	a << 1
}

fn halve(a : int) -> int{
	a >> 1
}

fn is_even(a : int) -> bool{
	a & 1 == 0
}

fn ethiopian_multiplication(mut x : int, mut y : int) -> int{
	let mut sum = 0;
	
	while x >= 1 {
		print!("{} \t {}", x, y);
		if is_even(x) {
			println!("\t Not Kept");
		} else {
			sum = sum + y;
			println!("\t Kept");
		}
		x = halve(x);
		y = double(y);
	}
	sum
}
