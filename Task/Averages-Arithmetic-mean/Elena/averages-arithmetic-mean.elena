#define std'basic'*.
#define std'patterns'*.
#define std'dictionary'*.

#class MeanAction
{
    #field theValue.
    #field theCount.

    #role Empty
    {
        #method save : aWriter = 0 save:aWriter.

        #method evaluate : aValue
        [
            theValue := Real::0.
            theCount := Integer::0.

            #shift.

            self evaluate:aValue.
        ]
    }

    #initializer
    [
        #shift Empty.
    ]

    #method save : aWriter = (theValue / theCount) save:aWriter.

    #method evaluate : aValue
    [
        theCount += 1.

        theValue += aValue.
    ]

    #method start : aPattern
    [
        aPattern run:self.

        ^ Real64Value::self.
    ]
}

#symbol Program =
[
    'program'Output << MeanAction start:Scan::(1, 2, 3, 4, 5, 6, 7, 8).
].
